-- 한글 깨짐 방지
$ show server_encoding
$ show client_encoding
$ set server_encoding = 'UTF8'
$ set client_encoding = 'UTF8' 

-- make db
CREATE DATABASE pozaang;

-- make table
CREATE TABLE people (
  person_id SERIAL PRIMARY KEY,
  person_name VARCHAR(50) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  first_name VARCHAR(50),
  last_name VARCHAR(50),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
comment on table people is '사용자';
comment on column people.email is '이메일';
comment on column people.first_name is '이름';
comment on column people.last_name is '성';

CREATE TABLE preferences (
    preference_id serial PRIMARY KEY,
    size VARCHAR(255),
    color VARCHAR(255),
    style VARCHAR(255),
    price VARCHAR(255),
    category_id INTEGER NOT NULL,
    FOREIGN KEY (category_id) REFERENCES categories(category_id),
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE addresses (
    address_id serial PRIMARY KEY,
    recipient_name VARCHAR(255) NOT NULL,
    phone_number VARCHAR(30) NOT NULL,
    postal_code VARCHAR(10) NOT NULL,
    road_address VARCHAR(255) NOT NULL,
    detail_address VARCHAR(255) NOT NULL,
    extra_address VARCHAR(255),
    delivery_memo VARCHAR(255),
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);
comment on table addresses is '주소';
comment on column addresses.recipient_name is '수신이/받는이';
comment on column addresses.phone_number is '연락처';
comment on column addresses.postal_code is '우편번호';
comment on column addresses.road_address is '도로명주소';
comment on column addresses.detail_address is '상세주소';
comment on column addresses.extra_address is '추가 주소정보';
comment on column addresses.delivery_memo is '배송메모';

CREATE TABLE orders (
    order_id serial PRIMARY KEY,
    status VARCHAR(255) NOT NULL,
    ordered_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    order_price NUMERIC(10,2) NOT NULL,
    discount_price NUMERIC(10,2) NOT NULL,
    pay_price NUMERIC(10,2) NOT NULL,
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);
comment on table orders is '주문';
comment on column orders.status is '주문완료/준비중(ready), 배송중(delivery_start), 배송완료(delivery_finish), 구매확정(done), 환불/교환/취소요청(cancel), 환불/교환승인완료(return)';

CREATE TABLE order_items (
    order_items_id serial PRIMARY KEY,
    qty NUMERIC(10,2) NOT NULL,
    price NUMERIC(10,2) NOT NULL,
    order_id INTEGER NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    product_id INTEGER NOT NULL,
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE payments (
  payment_id SERIAL PRIMARY KEY,
  paied_at DATETIME,
  total_price NUMERIC(10, 2) NOT NULL,
  paied_price NUMERIC(10, 2) NOT NULL,
  payment_method VARCHAR(255) NOT NULL,
  user_id INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(user_id),
  order_id INTEGER NOT NULL,
  FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

CREATE TABLE order_canceles (
    order_cancel_id serial PRIMARY KEY,
    status VARCHAR(255) NOT NULL,
    canceled_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    total_price NUMERIC(10,2) NOT NULL,
    cancel_commition NUMERIC(10,2) NOT NULL,
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id),
    order_id INTEGER NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(id)
);
comment on table order_canceles is '주문취소';
comment on column order_canceles.status is '요청(request), 완료(done), 거절(decline)';
comment on column order_canceles.cancel_commition is '취소 수수료';

CREATE TABLE categories (
    category_id serial PRIMARY KEY,
    type VARCHAR(255),
    name VARCHAR(255) NOT NULL,
    image_url TEXT,
    description TEXT,
    deleted_at TIMESTAMP,
    parent_id INTEGER REFERENCES categories(category_id)
);
comment on table categories is '카테고리(상품, 게시글)';
comment on column categories.type is '공지(notice), 상품분류(product), QnA(qna), 인기포장사진들(popular)';

CREATE TABLE products (
    product_id serial PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price NUMERIC(10,2) NOT NULL,
    image_url TEXT,
    seller_id INTEGER NOT NULL,
    FOREIGN KEY (seller_id) REFERENCES users(user_id),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP
);

CREATE TABLE product_categorory_mapping (
    category_id INTEGER REFERENCES categories(category_id),
    product_id INTEGER REFERENCES products(product_id),
    CONSTRAINT product_categorory_mapping_pkey PRIMARY KEY (product_id, category_id)
);

CREATE TABLE article_categorory_mapping (
    category_id INTEGER REFERENCES categories(category_id),
    article_id INTEGER REFERENCES articles(article_id),
    CONSTRAINT article_categorory_mapping_pkey PRIMARY KEY (article_id, category_id)
);

CREATE TABLE articles (
  article_id SERIAL PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  body TEXT NOT NULL,
  author_id INTEGER NOT NULL REFERENCES users(user_id),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  edited_at TIMESTAMP,
  deleted_at TIMESTAMP
);

CREATE TABLE article_images (
  article_image_id SERIAL PRIMARY KEY,
  image_url TEXT,
  seq INTEGER DEFAULT 1,
  image_info TEXT NOT NULL,
  article_id INTEGER REFERENCES products(article_id),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  edited_at TIMESTAMP,
  deleted_at TIMESTAMP
);
comment on table article_images is '주문취소';
comment on column article_images.image_info is '이미지 설명 문구';

CREATE TABLE article_image_product_mapping (
  article_image_product_mapping_id SERIAL PRIMARY KEY,
  x integer NOT NULL DEFAULT 0,
  y integer NOT NULL DEFAULT 0,
  article_image_id INTEGER REFERENCES article_images(article_image_id),
  product_id INTEGER REFERENCES products(product_id),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  edited_at TIMESTAMP,
  deleted_at TIMESTAMP
);

CREATE TABLE comments (
    comment_id serial PRIMARY KEY,
    article_id INTEGER NOT NULL REFERENCES articles(article_id),
    parent_id INTEGER REFERENCES comments(comment_id),
    user_id INTEGER NOT NULL REFERENCES users(user_id),
    comment_text TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE coupons (
  coupon_id serial PRIMARY KEY,
  code_rule VARCHAR(255),
  name VARCHAR(255),
  condition TEXT,
  discount NUMERIC(5, 2) NOT NULL,
  expiration_date_condition VARCHAR(255),
  is_active BOOLEAN NOT NULL DEFAULT true
);

CREATE TABLE coupon_users (
  coupon_user_id SERIAL PRIMARY KEY,
  code TEXT PRIMARY KEY,
  discount NUMERIC(5, 2) NOT NULL,
  expiration_date DATE NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  coupon_id INTEGER REFERENCES coupons(coupon_id),
  user_id INTEGER REFERENCES users(user_id),
  order_id INTEGER REFERENCES orders(order_id)
);

-- 추가되어야하는 테이블: 판매자, 중간 정산, 통계, 사진별 좋아요 수, 

